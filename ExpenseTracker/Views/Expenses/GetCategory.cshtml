@model PaginatedList<ExpenseTracker.Models.Expense>

@{
    ViewData["Title"] = "GetCategory";
}

<h2 class="text-center">@ViewBag.Category</h2>
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<div class="dropdown">
    <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
        Category
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu">
        <li><a asp-action="GetCategory" asp-route-category="Housing" class="list-group-item list-group-item-action list-group-item-light">Housing Expenses</a></li>
        <li><a asp-action="GetCategory" asp-route-category="Food" class="list-group-item list-group-item-action list-group-item-light">Food Expenses</a></li>
        <li><a asp-action="GetCategory" asp-route-category="Utilities" class="list-group-item list-group-item-action list-group-item-light">Utilities Expenses</a></li>
        <li><a asp-action="GetCategory" asp-route-category="Pleasure" class="list-group-item list-group-item-action list-group-item-light">Pleasure Expenses</a></li>
    </ul>
</div>
<form role="search" asp-action="GetCategory" method="get" style="margin : 20px 0px;">
    <div class="input-group add-on">
        <input type="hidden" name="category" value="@ViewBag.Category" />
        <input class="form-control" name="searchString" placeholder="Search by name..." type="text">
        <div class="input-group-btn">
            <button class="btn btn-default" type="submit">Search</button>
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Expense Name", "GetCategory", new { category = ViewBag.Category, sortOrder = ViewBag.NameSortParm })
            </th>
            <th>
                @Html.ActionLink("Amount", "GetCategory", new { category = ViewBag.Category, sortOrder = ViewBag.AmountSortParm })
            </th>
            <th>
                @Html.ActionLink("Expense Date", "GetCategory", new { category = ViewBag.Category, sortOrder = ViewBag.DateSortParm })
            </th>
            <th>
                @Html.ActionLink("Category", "GetCategory", new { category = ViewBag.Category, sortOrder = ViewBag.CategorySortParm })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpenseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpenseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<p class="h5">
    Total: @ViewBag.Total
</p>
<p>
    <a asp-action="Index">Back to List</a>
</p>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="GetCategory"
   asp-route-category="@ViewBag.Category"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-searchString="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="GetCategory"
   asp-route-category="@ViewBag.Category"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-searchString="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
